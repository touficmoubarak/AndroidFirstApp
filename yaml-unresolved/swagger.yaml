openapi: 3.0.0
security:
  - bearerAuth: []
info:
  version: 5.0.0
  title: Trading Interface Automation Framework For Local TV Transactions.
  description: |
    # Television Interface Practices Initiative (TIP)

    Trading Interface Automation Framework For Local TV Transactions.

    ## Confidentiality Note

    The detailed Workflow and API Framework in this document has been
    synthesized from several technology vendor contributions. The contributions
    highlighted the broad adoption of commonly used specs and in some cases,
    there was an original work contribution from the TIP Initiative and
    Frontrow Advisory.  The TIP Initiative has thoroughly reviewed this
    document to ensure details have been appropriately abstracted and
    synthesized.  This report does not include any specific proprietary work
    from a single technology vendor or source.

    ## Version History

    | Version | Date | Description | Author |
    |---------|------|-------------|--------|
    | Release 5.0.0 | May 5, 2020 | Release 5.0.0 | Frontrow Advisory |
    | Release 4.0 | May 16, 2019 | Release 4.0 (WORKING DRAFT) | Frontrow Advisory |
    | Release 3.1 | February 1, 2019 | Release 3.1 | Frontrow Advisory |
    | Release 3.0 | August 22, 2018 | Release 3.0 | Frontrow Advisory |
    | Draft 2.1 | June 29, 2018 | Initial Draft Phase 2.1 | Frontrow Advisory |
    | Release 2.0 | April 6, 2017 | Release |  Frontrow Advisory |
    | Draft 1.1 | February 22, 2017 | Initial Draft Phase 2 | Frontrow Advisory |
    | Release 1.0 | November 11, 2017 | Release | Frontrow Advisory |
    | Draft | October 9, 2017 | Revised Draft | Frontrow Advisory |
    | Draft | September 25, 2017 | Initial Draft | Frontrow Advisory |

    ## Release 5.0.0 Notes

    | Changes from Release 4.2.0 to Release 5.0.0 | Source |
    |-------------------------------------------|--------|
    | Applied consistent style to Framework including lowerCamelCase | Vendor feedback |
    | SalesElement structures to define product catalog to support inventory avails and transactions | Vendor feedback |
    | Vendor sign-off of updates to Logtimes, Commercial Instructions, Invoices | Frontrow Advisory |
    | Implemented TimePeriod object | Vendor feedback |
    | Interface titles (tabs names) refer to "sender/" and "interface" (e.g. "seller/ Logtimes") | Vendor feedback |
    | Transitioned to DateTime in order to support Broadcast Date and Calendar Date/Time military (HH:MM:SS 24hrs) | Vendor feedback |
    | Changed TransactionId to a GUID | Vendor feedback |
    | Created common objects: <ul><li>audienceSegmentDetail</li><li>pricingMetricOption</li><li>audiencePricingMetricUniverse</li><li>currency</li><li>ratecard</li><li>dateTime</li><li>timePeriod</li><li>dayDistribution</li><li>inventoryPosition</li><li>inventoryType</li></ul> | Vendor feedback |

    ### Updated Buyer endpoints:

    * /buyer/commercialInstructions

    ### New Buyer endpoints:

    * /buyer/inventoryAvails (request)
    * /buyer/RFP
    * /buyer/order

    ### Updated Seller endpoints:

    * /seller/logtimes
    * /seller/invoice

    ### New Seller endpoints:

    * /seller/inventoryAvails (response)
    * /seller/proposal
    * /seller/orderConfirmReject

    ## General Glossary

    | Term | Definition |
    |------|------------|
    | Advanced TV | Television paired with technology that allows for new features, components or uses Addressable, programmatic, over-the-top (OTT) and interactive are all subsets of advanced TV. |
    | Application Program Interface (API) | A set of routines, protocols, and tools for building software applications. The API specifies how software components should interact and are the building blocks to integrate systems and platforms to access data and perform operations. |
    | Alternate ID (AD ID) | A unique identifier for commercial copy assigned to most commercials by advertising agencies. |
    | Automated Ad Buying | Or programmatic, typically refers to the use of software to purchase digital advertising, as opposed to the traditional process that involves RFPs, human negotiations and manual insertion orders. The challenge for traditional media companies is the complexity of the process and terminology in digital programmatic. It’s basically using machines to buy ads. |
    | Air Date | Traditional linear broadcast of a commercial; also refers to the exact date that the commercial spot ran. |
    | Avail | Remaining unsold units of time for sale within a container, |
    | Bookend | A scheduling constraint defined for a pair of units on the same deal wherein the one unit should air in the first slot of a break and the second should air in the last slot of the same break. |
    | Brand | Name used to distinguish one product from its competitors. It can apply to a single product, an entire product line, or even a company. |
    | Cancellation Options | Included as part of national upfront negotiations that indicate a date and dollar amount by quarter in which the buyer may choose to exercise the cancellation of dollars. Movie accounts may have rolling cancellation dates |
    | Composition Index | Measures the concentration of a particular target group of consumers on a given website or ad network, compared to the concentration of that target in the total Internet population. |
    | CPM | Cost Per thousand - The cost of advertising per thousand potential customers reached by a given broadcast advertisement. |
    | CPP | Cost Per Rating Point - The cost of reaching one percent of the target audience within a specified geographic area. Used by many media planners in developing, setting, and allocating rating point goals for marketing budgets. |
    | Creative | Another name for commercial. |
    | Demographic (Demo) | Division of the audience into various segments. |
    | Data Management Platform (DMP) | Software that collects and organizes either a buyer’s or seller’s first-party audience data from its website or station feed to improve audience segmentation and enable targeting. |
    | Demand Side Platform (DSP) | Software platform that feeds a buyer’s media specifications onto an exchange, manages multiple exchange accounts and bids across those accounts. |
    | Electronic Data Interchange (EDI) | A communication technology used to transmit data from one system to another as a batch file exchange process. |
    | Estimate  | Reference code used in buying systems for reconciliation |
    | Equivalized | Units whose impressions are weighted down or up from 30-second impressions based on their ratio of their length to 30 seconds. For example, if a selling title has projected 30-second impressions of 50,000 for a particular demo, equivalized impressions for a 15-second unit would be 25,000 and for a 60-second unit would be 100,000. |
    | Goals | Goals are usually defined by the buyer at the time of the RPF and used as part of the negotiations between the buyer and seller. Goals could be as broad as overall campaign goal or broken down further into various segments, which usually are daypart. |
    | Interstitial | One of a series of short items broadcast between program segments. This term can refer to promos, vignettes, or any other short form of programming |
    | Inventory Type | Type of advertising inventory "commercials" |
    | Linear TV | A term used for real-time television services that are transmitted on a schedule. Most TV programs originate as linear TV but may become time-shifted for later viewing. |
    | Media Outlet | Station or network (seller) |
    | Piggyback | Back-to-back scheduling of two or more brand commercials of one advertiser in network or spot positions. |
    | Preemption | A term used when a unit does not air as originally scheduled. |
    | Private Marketplace | Programmatic trading environment in which a publisher makes available a segment of inventory to an advertiser at a defined price. |
    | Programmatic TV (PTV): | An automated, technology- or data-driven method of buying linear TV |
    | Rating Source | The rating source and data stream for the audience actuals e.g. Program Live, Commercial Rating +3, etc. |
    | Reach & Frequency | Number of households exposed to a broadcast media schedule (reach) multiplied by the number of time they are exposed (frequency). The result indicates total potential audience exposure in a given geographical area. |
    | Sandwich |
    | Service or Web Service | A software system designed to support interoperable machine-to-machine interaction over a network. |
    | Supply Side Platform (SSP) | Software platform that feeds a station’s inventory onto the Exchange and allows the station to manage their ad impressions and to maximize revenue. |
    | Time Separation | A limitation on an ad sales deal that requires units to be separated from themselves or other units in the same primary product category or for the same advertiser by a specified length of time; this may be by unit length or across lengths |
    | Trading Desk | The team executing the buys using a DSP. |
    | Universe | The total number of persons/homes in a given population. There are multiple types of universe e.g. Total US, cable coverage, market, zip code, etc. |
    | Upfront | A term indicating that an advertiser has purchased advertising for the coming broadcast year in an early buying season, typically for the benefit of lower rates and CPM guarantees |
    | Vignette | Any short item of programming that can be inserted in a program break. See also interstitial. |
    | VPVH | Viewers per viewing household – more common in national buys. |
  termsOfService: 'http://placeholderdomain.io/terms/'
  contact:
    name: TIP Initiative
    email: tipinitiative@frontrowadvisory.com
    url: 'http://placeholderdomain.io'
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
servers:
  - url: 'http://placeholderdomain.io'
paths:
  /buyer/commercialInstructions:
    post:
      tags:
        - Buyer
      summary: Buyer Commercial Instructions POST
      description: Allows the creative agency or service provider of commercial instructions to send new or revised traffic instructions on how commercial copy should be applied to units (No request from Seller is required)
      operationId: commercialInstructionsPost
      requestBody:
        description: commercial instructions required
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/commercialInstructionSchemas/properties/CommercialInstructionsRequestObject'
      responses:
        '200':
          description: request accepted successfully
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/Error'
  /buyer/inventoryAvails:
    post:
      tags:
        - Buyer
      summary: Send the request for the inventory avails required
      description: 'This endpoint is hosted at the seller end, Allows the Buyer as part of campaign planning to initiate an Inventory Request to Seller. The payload of the request can either be:<br/> NOTE#1: For New Request --> transactionId.transactionType=New<br/> NOTE#2: for Changing a previously submitted request --> <br/> <li>transactionId.transactionType=Change<br/> <li>originalTransactionId object must be provided'
      operationId: inventoryAvailsBuyers
      requestBody:
        description: Send the request for the inventory avails required
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventoryAvailsSchemas/properties/InventoryAvailsBuyerObject'
      responses:
        '200':
          description: Request processed successfully. Response is provided synchronously
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventoryAvailsSchemas/properties/InventoryAvailsSellerObject'
        '202':
          description: 'Request was accepted, Response will be provided asynchronously.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/AcceptedResponse'
        default:
          description: 'unexpected error, return the appropriate and corresponding HTTP status code matching the error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/Error'
  /buyer/inventoryAvails/cancel:
    post:
      tags:
        - Buyer
      summary: Send the request for the inventory avails required
      description: 'This endpoint is hosted at the seller end, Allows the Buyer as part of campaign planning to initiate an Inventory Request to Seller. The payload of the request can either be:<br/> NOTE#1: For New Request --> transactionId.transactionType=New<br/> NOTE#2: for Changing a previously submitted request --> <br/> <li>transactionId.transactionType=Change<br/> <li>originalTransactionId object must be provided'
      operationId: inventoryAvailsBuyersCancel
      requestBody:
        description: Send the request for the inventory avails required
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventoryAvailsSchemas/properties/InventoryAvailsBuyerObject'
      responses:
        '200':
          description: Request processed successfully. Response is provided synchronously
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventoryAvailsSchemas/properties/InventoryAvailsSellerObject'
        '202':
          description: 'Request was accepted, Response will be provided asynchronously.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/AcceptedResponse'
        default:
          description: 'unexpected error, return the appropriate and corresponding HTTP status code matching the error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/Error'
  /buyer/order:
    post:
      tags:
        - Buyer
      summary: Create an Order
      description: The endpoint resides on the seller side. <br/> the endpoint allows the buyer to creates an order in the Seller system.
      operationId: createOrder
      requestBody:
        description: createOrder
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ordersSchemas/properties/BuyerOrderRequestObject'
      responses:
        '202':
          description: 'Your request was received.<br/> The request has been accepted for processing, but the processing has not been completed.<br/> The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/AcceptedResponse'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/Error'
  /buyer/order/cancel:
    post:
      tags:
        - Buyer
      description: The endpoint resides on the seller side. <br/> the endpoint allows the buyer to creates an order in the Seller system.
      operationId: cancelOrder
      requestBody:
        description: cancelOrder
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ordersSchemas/properties/OrderRecallObject'
      responses:
        '200':
          description: Cancel request received.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/AcceptedResponse'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/Error'
  /buyer/rfp:
    post:
      tags:
        - Buyer
      summary: Create or Change a previously requested an RFP in the seller's system.
      description: |-
        This endpoint resides on the seller side. the purpose of the endpoint is to allow the buyer to: A: create New RFP is the seller system. transactionHeader.transactionId.transactionType = New B: request changes to be made to a previously communicated RFP.
          in order to correctly handele the change request the following conditions must be satisfied:
          B.1: transactionHeader.transactionId.transactionType=Changed
          B.2: transactionHeader.originalTransactionId.transactionId must indicate the original transactionId
      operationId: NewChangeRFP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rfpsSchemas/properties/RFPRequestObject'
      responses:
        '200':
          description: request processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/AcceptedResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/Error'
  /buyer/rfp/cancel:
    post:
      tags:
        - Buyer
      summary: Cancel a previously submitted RFP in the seller's system.
      description: 'Buyer can send this request to cancel a previous request. originalTransactionId values needs to indicate which request is to be cancelled.<br/> NOTE#1: transactionId.transactionType = Cancel<br/> NOTE#2: originalTransactionId.transactionId must refer to the transaction in question to be cancelled'
      operationId: CancelRFP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/commonSchemas/properties/TransactionHeader'
      responses:
        '200':
          description: request processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/AcceptedResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/Error'
  /seller/logtimes:
    post:
      tags:
        - Seller
      summary: Seller Logtimes POST
      description: Allows the seller to send to the buyer the log times information (No Request from buyer is Required)
      operationId: logsTimesSeller
      requestBody:
        description: seller POSTs the Log Times report to the buyer's system
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/logTimesSchemas/properties/LogTimesSellerObject'
      responses:
        '200':
          description: Request processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/AcceptedResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/Error'
  /seller/invoice:
    post:
      tags:
        - Seller
      summary: Seller Invoice POST
      description: Allows the seller to send to the buyer new invoice information (No Request from buyer is Required)
      operationId: invoicePostSeller
      requestBody:
        description: Invoice body included in request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/invoiceSchemas/properties/InvoiceObject'
      responses:
        '200':
          description: Request processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/TransactionHeader'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/Error'
  /seller/invoice/cancel:
    post:
      tags:
        - Seller
      summary: Seller Invoice Cancel
      description: 'This endpoint will be hosted at the buyer side. This endpoint allows the seller to request from the buyer to cancel and ignore a previously communicated Invoice request. As Follows:<br/> NOTE#1:originalTransactionId values needs to indicate which request is to be cancelled.<br/> NOTE#2: transactionId.transactionType = Cancel<br/> NOTE#3: originalTransactionId.transactionId must refer to the transaction in question to be cancelled'
      operationId: invoiceSellerCancel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/commonSchemas/properties/TransactionHeader'
      responses:
        '200':
          description: Request processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/AcceptedResponse'
        default:
          description: 'unexpected error, return the appropriate and corresponding HTTP status code matching the error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/Error'
  /seller/inventoryAvails:
    post:
      tags:
        - Seller
      summary: Seller POSTs the Inventory Avails information to the buyer's system
      description: |
        This endpoint will be hosted at the buyer side, Allows the Seller to send inventory criteria such as Stations, Selling Elements, Inventory Types, Pricing, Audience Estimates either solicited or unsolicited
      operationId: inventoryAvailsSellers
      requestBody:
        description: Seller POSTs the the Inventory Avails information to the buyer's system
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventoryAvailsSchemas/properties/InventoryAvailsSellerObject'
      responses:
        '200':
          description: Request processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/AcceptedResponse'
        default:
          description: 'unexpected error, return the appropriate and corresponding HTTP status code matching the error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/Error'
  /seller/inventoryAvails/cancel:
    post:
      tags:
        - Seller
      summary: Cancel inventory Avails Request
      description: 'This endpoint will be hosted at the buyer side. This endpoint allows the buyer to request from the seller to cancel and ignore a previously communicated inventoryAvails request. As Follows:<br/> NOTE#1:originalTransactionId values needs to indicate which request is to be cancelled.<br/> NOTE#2: transactionId.transactionType = Cancel<br/> NOTE#3: originalTransactionId.transactionId must refer to the transaction in question to be cancelled'
      operationId: inventoryAvailsSellerCancel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/commonSchemas/properties/TransactionHeader'
      responses:
        '200':
          description: Request processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/AcceptedResponse'
        default:
          description: 'unexpected error, return the appropriate and corresponding HTTP status code matching the error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/Error'
  /seller/order/confirmation:
    post:
      tags:
        - Seller
      summary: Confirmation of acceptance of previously submitted order
      description: The endpoint resides on the buyer side to allow the seller to send a confirmation<br/> regarding the successful processing of previously submitted order.<br/> originalTransactionId is required for Audit Trail.
      operationId: orderConfirmation
      requestBody:
        description: Order Confirmation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ordersSchemas/properties/OrderConfirmationResponseObject'
      responses:
        '200':
          description: confirmation Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/AcceptedResponse'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/Error'
  /seller/order/reject:
    post:
      tags:
        - Seller
      summary: Reject of previously submitted order
      description: The endpoint resides on the buyer side to allow the seller to send a reject (all or None)<br/> regarding the rejection  of previously submitted order.<br/> originalTransactionId is required for Audit Trail.
      operationId: orderReject
      requestBody:
        description: Order Rejection
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ordersSchemas/properties/OrderRejectResponseObject'
      responses:
        '200':
          description: Rejection Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/AcceptedResponse'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/Error'
  /seller/proposal:
    post:
      tags:
        - Seller
      summary: Create or Change a proposal in the buyers system
      description: Create or Change a proposal in the buyers system
      operationId: createChangeProposal
      requestBody:
        description: Create or Change a proposal in the buyers system
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/proposalSchemas/properties/ProposalObject'
      responses:
        '200':
          description: Request processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/AcceptedResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/Error'
  /seller/proposal/cancel:
    post:
      tags:
        - Seller
      summary: Cancel a proposal in the buyer's system
      description: 'Cancel a proposal in the buyer''s system This endpoint allows the seller to request from the buyer to cancel and ignore a previously communicated proposal request. As Follows:<br/> NOTE#1:originalTransactionId values needs to indicate which request is to be cancelled.<br/> NOTE#2: transactionId.transactionType = Cancel<br/> NOTE#3: originalTransactionId.transactionId must refer to the transaction in question to be cancelled'
      operationId: cancelProposal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/commonSchemas/properties/TransactionHeader'
      responses:
        '200':
          description: Request processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/AcceptedResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonSchemas/properties/Error'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    commonSchemas:
      type: object
      properties:
        TransactionHeader:
          description: A common object defining the general transaction header information
          properties:
            tipVersion:
              description: TIP version of the interface
              type: string
            transactionId:
              $ref: '#/components/schemas/commonSchemas/properties/TransactionId'
            originalTransactionId:
              $ref: '#/components/schemas/commonSchemas/properties/TransactionId'
            timeStamp:
              description: Date and time the transaction was created - date-time represent UTC of the server
              type: string
              format: date-time
          required:
            - tipVersion
            - transactionId
            - timeStamp
        TransactionId:
          description: A common object defining transaction identifier details
          properties:
            transactionId:
              description: Global unique identifier (GUID)
              type: string
            transactionType:
              description: 'This indicates if the data exchange being sent is either a new, change or cancel transaction.'
              type: string
              enum:
                - New
                - Change
                - Cancel
            sourceId:
              description: Indicates the source "trading partner" unique identification
              type: string
            sourceName:
              description: Indicates the source "trading partner" name
              type: string
          required:
            - transactionId
            - transactionType
            - sourceId
            - sourceName
        MediaOutlet:
          description: A descriptor common object defining linear broadcast television or non-linear sell-side service
          properties:
            mediaOutletId:
              description: 'Unique persistent identifier for the station, network or entity'
              type: string
            mediaOutletName:
              description: 'Station, network name or entity associated to mediaOutletId'
              type: string
            mediaOutletType:
              description: Type of media outlet
              type: string
              enum:
                - Broadcast TV
                - OTT
                - Connected TV
                - Addressable TV
                - Digital Video
                - Mobile Video
                - Terrestrial Radio
                - Digital Audio
            mediaOutletChannel:
              description: Station or network station identification (Channel)
              type: string
            mediaOutletMarketName:
              description: Market Name
              type: string
            mediaOutletReference:
              description: External mediaoutlet reference information
              type: string
          required:
            - mediaOutletId
            - mediaOutletName
            - mediaOutletType
        Advertiser:
          description: A descriptor common object defining the advertiser
          properties:
            advertiserId:
              description: Unique persistent identifier for the advertiser/client
              type: string
            advertiserName:
              description: Advertiser name
              type: string
            advertiserReference:
              description: External advertiser reference information
              type: string
          required:
            - advertiserId
            - advertiserName
        Brand:
          description: A descriptor common object defining the advertising-brand
          properties:
            brandId:
              description: Unique persistent identifier for the brand
              type: string
            brandName:
              description: Brand Name
              type: string
            brandReference:
              description: External brand reference information
              type: string
          required:
            - brandId
            - brandName
        Buyer:
          description: 'A descriptor common object defining the agency, buy-side organization, trafficking agency or supplier of the media'
          properties:
            buyerId:
              description: Unique persistent identifier for the Buying organization or trafficking agency or the supplier of the media
              type: string
            buyerName:
              description: Buying organization name
              type: string
            buyerReference:
              description: External buyer reference information
              type: string
          required:
            - buyerId
            - buyerName
        Product:
          description: A descriptor common object defining the product category
          properties:
            productId:
              description: Unique persistent identifier for the product
              type: string
            productName:
              description: Product name
              type: string
            productReference:
              description: External product reference
              type: string
          required:
            - productId
            - productName
        AudienceSegment:
          description: A descriptor common object defining the audience segment details
          properties:
            audienceSegmentId:
              description: Unique persistent identifier for audience segment
              type: string
            audienceSegmentName:
              description: Audience Segment Name
              type: string
            audienceSegmentReference:
              description: External audience segment reference
              type: string
            audienceMethodology:
              description: Methodology used to aggregate the audience
              type: string
            primaryIndicator:
              description: True/False
              type: boolean
            guarantee:
              description: True/False
              type: boolean
            ratingSource:
              description: Data source for audience segment
              type: string
              enum:
                - Nielsen
                - ComScore
                - Internal
                - Client
            ratingStream:
              description: Rating stream type associated to the rating source
              type: string
              enum:
                - Program Live
                - Commercial Ratings Live
                - Commercial Rating Live+3
                - Commercial Rating Live+7
          required:
            - audienceSegmentId
            - audienceSegmentName
        AudienceSegmentDetail:
          description: A common object combining a mediaoutlet id with audience segment and universe objects
          properties:
            mediaOutletId:
              description: The mediaOutletId associated to the mediaoutlet
              type: string
            audienceSegment:
              $ref: '#/components/schemas/commonSchemas/properties/AudienceSegment'
            universes:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/Universe'
              minItems: 1
          required:
            - mediaOutletId
            - audienceSegment
        AudienceMetric:
          description: A common object defining the audience metric type and value
          properties:
            audienceMetric:
              description: Audience metric type
              type: string
              enum:
                - Impressions
                - Rating
                - GRPs VPVH
                - Composition
                - Reach
                - Frequency Threshold
                - Scarcity
            audienceMetricValue:
              description: Audience metric type value
              type: integer
          required:
            - audienceMetric
            - audienceMetricValue
        PricingMetricOption:
          description: |-
            A common object defining the Pricing metric
            CPM - Cost-per-thousand,
            CPP - Cost-per-point,
            CPE - Cost-per-engagement,
            CPA - Cost-per-action
          type: string
          enum:
            - CPM
            - CPP
            - CPE
            - CPA
        PricingMetric:
          description: A common object defining the audience-based pricing metric type and value
          properties:
            pricingMetric:
              $ref: '#/components/schemas/commonSchemas/properties/PricingMetricOption'
            pricingMetricValue:
              description: The dollar value associated to the audience-based pricing metric
              type: number
              format: float
          required:
            - pricingMetric
            - pricingMetricValue
        AudiencePricingMetric:
          description: A common object combining an audience segment id with audience metric and pricing metric objects
          properties:
            audienceSegmentId:
              description: Unique persistent identifier for audience segment
              type: string
            audienceMetric:
              $ref: '#/components/schemas/commonSchemas/properties/AudienceMetric'
            pricingMetric:
              $ref: '#/components/schemas/commonSchemas/properties/PricingMetric'
          required:
            - audienceSegmentId
            - pricingMetric
        Universe:
          description: A descriptor common object defining the universe coverage and the estimated number of households or people within the universe
          properties:
            universeType:
              description: Universe type name
              type: string
              enum:
                - Market
                - Total US
                - Coverage
                - Addressable
            universeTypeValue:
              description: The total number of households or people in the universe that are potentially reachable
              type: integer
        CancellationTerms:
          description: A descriptor common object defining cancellation terms for a proposal
          properties:
            cancellationType:
              description: Type of cancellation; either a specific quarter or broadcast date
              type: string
              enum:
                - Quarterly
                - Broadcast Date
            cancellation:
              description: Quarter name or broadcast date dependent on cancellation type
              oneOf:
                - type: string
                - type: string
                  format: date
            cancellationPriorDays:
              description: Number of days notice needed prior to start quarter or broadcast date to request cancellation
              type: integer
            cancellationPercentage:
              description: Percentage of total amount/budget that is cancellable
              type: number
              format: float
        TimeSeparation:
          description: A descriptor common object defining time separation terms
          properties:
            unitLength:
              description: Unit length
              type: integer
            timeSeparation:
              description: Agreement whereby the seller agrees to separate advertiser’s commercials by a specific length of time in addition to agreeing to not run another product that is directly competitive within a specific time frame; agreement may defined by unit length or across all lengths. Time Separation is defined in seconds
              type: integer
        ReferenceId:
          description: 'A descriptor common object defining the reference details for RFP, Proposal, Order and Invoice'
          properties:
            referenceSourceName:
              description: Name associated with the organization that is supplying the ids and version information
              type: string
            referenceSourceId:
              description: ID associated with the organization sending the information
              type: string
            referenceSourceLookup:
              description: Reference Source Look up; this could be URI to lookup information about the reference source name
              type: string
            referenceType:
              description: Source reference type
              type: string
              enum:
                - RFP
                - Proposal
                - Deal
                - Order
                - Invoice
            referenceId:
              description: Number or ID associated with reference type
              oneOf:
                - type: integer
                - type: string
            referenceVersionId:
              description: Version Number to indicate the version number for the reference id; this will be used to support revisions
              type: string
            referenceName:
              description: 'Free form name used to identify the type of entity such as Order Name, RFP Name'
              type: string
          required:
            - referenceSourceName
            - referenceSourceId
            - referenceType
            - referenceId
        Currency:
          description: |-
            Currency Code is based on ISO 4217.
            This is the short list of most widely used codes for North America
          type: string
          enum:
            - USD
            - CAD
            - EUR
            - GBP
            - MXN
            - AUD
        CpeCode:
          description: 'A common object combining buyer''s client code, product and estimate'
          properties:
            clientCode:
              description: 'Client code provided from the buyer. Packages client, product and estimate codes together.'
              type: string
            productCode:
              description: 'Product code provided from the buyer. Packages client, product and estimate codes together.'
              type: string
            estimateCode:
              description: 'Estimate code provided from the buyer. Packages client, product and estimate codes together.'
              type: string
        BillingOption:
          description: A descriptor common object defining the billing/invoice information
          properties:
            billingCalendar:
              description: The invoicing calendar
              type: string
              enum:
                - Broadcast
                - Calendar
                - Nielsen
            billingCycle:
              description: The billing within the calendar the units should be billed
              type: string
              enum:
                - Month
                - Week
            billingGranularity:
              description: The order's invoice split parameters
              type: string
              enum:
                - Order
                - Brand
                - Inventory Type
                - Insertion Order
          required:
            - billingCalendar
            - billingCycle
        RateCard:
          description: A descriptor common object defining the Rate Card
          properties:
            rateCardId:
              description: Seller's Rate Card ID
              type: string
            rateCardName:
              description: Seller's Rate Card Name associated to the Rate Card ID
              type: string
        Budget:
          description: 'descriptor common object defining the budget or total allocation for a RFP or proposal with optional allocations per market, media outlet or media type'
          properties:
            budgetAmount:
              description: Total budget amount being requested
              type: number
              format: float
              minimum: 0
              exclusiveMinimum: true
            budgetAllocation:
              $ref: '#/components/schemas/commonSchemas/properties/BudgetAllocation'
          required:
            - budgetAmount
        BudgetAllocation:
          description: A descriptor common object defining the budget number and/or percentage in terms of budget type
          properties:
            budgetType:
              type: string
              enum:
                - DMA
                - MediaOutlet
                - MediaType
            budgetName:
              description: 'The value of budget name is a conditional on budgetType. - If budgetType = DMA, use the canonical list of DMA names - If budgetType = Mediaoutlet, use media outlet name (call sign) - If budgetType= MediaType, use values from MediaOutletType Enum'
              type: string
            budgetAmount:
              description: The overall budget amount allocated to the budget name
              type: number
              format: float
              minimum: 0
              exclusiveMinimum: true
            budgetSharePercent:
              description: The percentage share of the market name being allocated to the seller
              type: number
              format: float
              minimum: 0
              exclusiveMinimum: true
          required:
            - budgetType
            - budgetName
        Guideline:
          description: A descriptor common object defining the general guidelines (rules) when requesting programming
          properties:
            guidelineType:
              description: Type of guideline to support to support requests for genre or age-appropriateness rules
              type: string
              enum:
                - Content
                - Program
                - MPAA Rating
                - Site Category
                - Genre
                - Video Group
                - Video Site
            excludeOrInclude:
              type: string
              enum:
                - Include
                - Exclude
            guidelineId:
              description: Guideline ID
              type: string
            guidelineName:
              description: Guideline name associated to the guideline type
              type: string
          required:
            - guidelineType
            - excludeOrInclude
        DateTime:
          description: A descriptor common object combining broadcast date and broadcast time used in Logtimes & Invoices
          properties:
            broadcastDate:
              description: The broadcast date on which the unit aired/scheduled; this is not calendar date
              type: string
              format: date
            calendarDateTime:
              description: 'The calendar date and time on which the unit aired/scheduled. Time is interpreted based on the local timezone of the mediaoutlet using military date time YYYY-MM-DDTHH:MM:SS'
              type: string
              format: date-time
        TimePeriod:
          description: 'A common object combining date window, DOW and time window objects'
          properties:
            dateWindow:
              $ref: '#/components/schemas/commonSchemas/properties/DateWindow'
            DOW:
              $ref: '#/components/schemas/commonSchemas/properties/DayOfWeek'
            timeWindow:
              $ref: '#/components/schemas/commonSchemas/properties/TimeWindow'
          required:
            - dateWindow
            - DOW
        DateWindow:
          description: A descriptor common object defining the start and end dates
          properties:
            startDate:
              description: Start Date
              type: string
              format: date
            endDate:
              description: End Date
              type: string
              format: date
          required:
            - startDate
            - endDate
        TimeWindow:
          description: A descriptor common object defining the start and end times
          properties:
            startTime:
              description: 'Start time, indicates the starting time for the period. Time is considered local to the mediaoutlet. Using military time HH:MM:SS'
              type: string
              pattern: '^(([0-1][0-9])|(2[0-3]))(:[0-5][0-9]){2}$'
            endTime:
              description: 'End time, indicates the ending time for the period. Time is interpreted based on the local timezone of the mediaoutlet. Using military time HH:MM:SS'
              oneOf:
                - type: string
                  pattern: '^(([0-1][0-9])|(2[0-3]))(:[0-5][0-9]){2}$'
                - type: string
                  enum:
                    - TBD
                    - Indefinite
          required:
            - startTime
            - endTime
        DayOfWeek:
          description: A descriptor common object defining the valid days of week
          properties:
            monday:
              description: True/False
              type: boolean
            tuesday:
              description: True/False
              type: boolean
            wednesday:
              description: True/False
              type: boolean
            thursday:
              description: True/False
              type: boolean
            friday:
              description: True/False
              type: boolean
            saturday:
              description: True/False
              type: boolean
            sunday:
              description: True/False
              type: boolean
          required:
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
            - sunday
        DailyUnitDistribution:
          description: A descriptor common object defining the number of units per day of week. Zero (0) indicates no unit will be expected to air on the corresponding day of the week.
          properties:
            monday:
              description: Number of units or zero
              type: integer
              minimum: 0
            tuesday:
              description: Number of units or zero
              type: integer
              minimum: 0
            wednesday:
              description: Number of units or zero
              type: integer
              minimum: 0
            thursday:
              description: Number of units or zero
              type: integer
              minimum: 0
            friday:
              description: Number of units or zero
              type: integer
              minimum: 0
            saturday:
              description: Number of units or zero
              type: integer
              minimum: 0
            sunday:
              description: Number of units or zero
              type: integer
              minimum: 0
          required:
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
            - sunday
        InventoryType:
          description: 'A descriptor common object defining the type of advertisement, announcement, spot or message served on linear or digital service'
          type: string
          enum:
            - Commercial
            - Interstitial
            - Billboard
        InventoryPosition:
          description: A descriptor common object defining a request or actual placement of a commercial unit within a break or program
          type: string
          enum:
            - First
            - Middle
            - Last
            - Pre-Roll
            - Mid-Roll
            - Post-Roll
        LinkType:
          description: A descriptor common object defining the linking of matching or related commercials
          properties:
            linkType:
              description: Used to communicate unit linking information & sequence of how copy should be applied
              type: string
              enum:
                - Billboard
                - Piggyback
                - Bookend
                - Sandwich
                - Donut
                - Sponsorship
                - Package
            linkNum:
              description: Unique number to communicate the association of two or more units that have been linked together; only valid when the the instructions have a link type association
              type: integer
            linkSeq:
              description: Used to communicate the airing sequential order of units that have been linked together
              type: integer
          required:
            - linkType
        Contact:
          description: A descriptor common object defining a person's contact information
          properties:
            contactType:
              description: Type of Contact
              type: string
              enum:
                - Account Executive
                - Planner
                - Assistant
                - Buyer
                - Payee
                - Creative
                - Delivery Service
            referenceSourceName:
              description: Name associated with the organization that is supplying the contact information
              type: string
            referenceSourceId:
              description: ID associated with the organization
              type: string
            contactFirstName:
              description: Contact First Name
              type: string
            contactLastName:
              description: Contact Last Name
              type: string
            addressLine1:
              description: Contact Address Line 1
              type: string
            addressLine2:
              description: Contact Address Line 2
              type: string
            city:
              description: City
              type: string
            state:
              description: State
              type: string
            postalCode:
              description: Postal Code
              type: string
            country:
              description: Country
              type: string
            phoneNumber:
              description: Primary telephone number
              type: string
            email:
              description: Primary email
              type: string
              format: email
            effectiveDate:
              description: Effective date for contact
              type: string
              format: date
          required:
            - contactType
            - referenceSourceName
            - referenceSourceId
            - contactFirstName
            - contactLastName
            - effectiveDate
        RemittanceInfo:
          description: A descriptor common object defining the invoice remittance Information and billing instructions
          properties:
            referenceSourceId:
              description: ID associated with the remittance
              type: string
            referenceName:
              description: Name associated with the remittance
              type: string
            contactFirstName:
              description: Contact First Name (not necessary)
              type: string
            contactLastName:
              description: Contact Last Name (not necessary)
              type: string
            addressLine1:
              description: Contact Address Line 1
              type: string
            addressLine2:
              description: Contact Address Line 2
              type: string
            city:
              description: City
              type: string
            state:
              description: State
              type: string
            postalCode:
              description: Postal Code
              type: string
            country:
              description: Country
              type: string
            phoneNumber:
              description: Primary telephone number
              type: string
            contactEmail:
              description: Primary email for payment remittance information
              type: string
              format: email
            portalInformation:
              description: Portal information including payment instructions
              type: string
            paymentLink:
              description: URL that directs buyer to invoice payment options
              type: string
            comments:
              description: Comments
              type: string
        SalesElementHeader:
          description: A descriptor common object defining the sales element header information
          properties:
            mediaOutletId:
              description: MediaOutlet ID
              type: string
            salesElementName:
              description: Seller's sales element name; this could be either a program or daypart name
              type: string
            salesElementId:
              description: Seller's sales element ID
              type: string
            salesElementType:
              description: 'The type of Sales Element either time-, audience- or program-based. Audience is used to denote video/OTT which is identified by the MediaOutlet'
              type: string
              enum:
                - Time-specific
                - Program
                - Audience
          required:
            - mediaOutletId
            - salesElementName
            - salesElementId
            - salesElementType
        SalesElement:
          description: 'A common object combining the sales element header, time periods, programs and sales element inventory objects'
          properties:
            salesElement:
              $ref: '#/components/schemas/commonSchemas/properties/SalesElementHeader'
            timePeriods:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/TimePeriod'
            programs:
              description: This includes a list of program names that are included in the salesElement
              type: array
              items:
                type: string
            salesElementInventory:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/SalesElementInventory'
          required:
            - salesElement
            - salesElementInventory
        SalesElementInventory:
          description: A common object combining the sales element inventory and sales element inventory dates objects
          properties:
            inventoryType:
              $ref: '#/components/schemas/commonSchemas/properties/InventoryType'
            linkType:
              $ref: '#/components/schemas/commonSchemas/properties/LinkType'
            inventoryPosition:
              $ref: '#/components/schemas/commonSchemas/properties/InventoryPosition'
            inventoryLength:
              description: 'length of inventory type, in seconds'
              type: integer
            salesElementInventoryDates:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/SalesElementInventoryDate'
              minItems: 1
          required:
            - inventoryType
        SalesElementInventoryDate:
          description: A common object combining sales element inventory dates with audience pricing metrics objects
          properties:
            dateType:
              type: string
              enum:
                - Day
                - Week
                - Month
                - Quarter
            calendarType:
              description: Differentiates between OTT using Calendar and Linear using Broadcast Calendar.
              type: string
              enum:
                - Broadcast
                - Calendar
            dateWindow:
              $ref: '#/components/schemas/commonSchemas/properties/DateWindow'
            inventoryCapacity:
              description: The total maximum number of units for the SalesElementInventory
              type: string
            inventoryAvails:
              description: The number of "units" remaining for the SalesElementInventory
              type: string
            inventoryMax:
              description: The maximum number from the remaining "units" allowed for the SalesElementInventory
              type: string
            rate:
              description: The rate for individual unit
              type: number
              format: float
            audiencesPricingMetrics:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/AudiencePricingMetric'
          required:
            - dateType
            - calendarType
            - dateWindow
        SalesElementTransaction:
          description: 'A common object combining the sales element header, time periods, programs and transaction inventory'
          properties:
            salesElement:
              $ref: '#/components/schemas/commonSchemas/properties/SalesElementHeader'
            timePeriods:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/TimePeriod'
            programs:
              description: This includes list of program names included in the salesElement
              type: array
              items:
                type: string
            salesElementTransactionInventory:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/SalesElementTransactionInventory'
          required:
            - salesElement
            - timePeriods
            - salesElementTransactionInventory
        SalesElementTransactionInventory:
          description: A common object that combines sales element transaction inventory with the transaction dates
          properties:
            lineNum:
              description: Source Line transaction number
              type: string
            lineReference:
              description: User defined line reference to the source line transaction number
              type: string
            inventoryType:
              $ref: '#/components/schemas/commonSchemas/properties/InventoryType'
            linkType:
              $ref: '#/components/schemas/commonSchemas/properties/LinkType'
            inventoryPosition:
              $ref: '#/components/schemas/commonSchemas/properties/InventoryPosition'
            inventoryLength:
              description: 'length of inventory type, in seconds'
              type: integer
            adu:
              description: True/False
              type: boolean
            bonus:
              description: True/False
              type: boolean
            salesElementTransactionDates:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/SalesElementTransactionDate'
              minItems: 1
          required:
            - lineNum
            - inventoryType
            - salesElementTransactionDates
        SalesElementTransactionDate:
          description: A common object combining sales element transaction date information with the audience pricing metrics
          properties:
            dateType:
              type: string
              enum:
                - Week
            calendarType:
              description: Differentiates between OTT using Calendar and Linear using Broadcast Calendar.
              type: string
              enum:
                - Broadcast
                - Calendar
            dateWindow:
              $ref: '#/components/schemas/commonSchemas/properties/DateWindow'
            unitCount:
              description: The number of "units" for the SalesElementTransaction
              type: integer
            dailyUnitDistribution:
              $ref: '#/components/schemas/commonSchemas/properties/DailyUnitDistribution'
            rate:
              description: The rate for individual unit or impressions
              type: number
              format: float
            audiencesPricingMetrics:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/AudiencePricingMetric'
          required:
            - dateType
            - calendarType
            - dateWindow
            - unitCount
        Error:
          description: Common object to define error return from all APIs
          properties:
            errorCode:
              type: integer
            errorMessage:
              type: string
          required:
            - errorCode
            - errorMessage
        AcceptedResponse:
          description: Common object to define successful return from all APIs
          properties:
            transactionId:
              type: string
            timeStamp:
              type: string
              format: date-time
          required:
            - transactionId
            - timeStamp
    commercialInstructionSchemas:
      type: object
      properties:
        CommercialInstructionsRequestObject:
          description: Top level element for Commercial Instructions Buyer POST operations
          properties:
            transactionHeader:
              $ref: '#/components/schemas/commonSchemas/properties/TransactionHeader'
            referenceIds:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/ReferenceId'
            buyer:
              $ref: '#/components/schemas/commonSchemas/properties/Buyer'
            contact:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/Contact'
            advertiser:
              $ref: '#/components/schemas/commonSchemas/properties/Advertiser'
            product:
              $ref: '#/components/schemas/commonSchemas/properties/Product'
            dateWindow:
              $ref: '#/components/schemas/commonSchemas/properties/DateWindow'
            cpeCode:
              $ref: '#/components/schemas/commonSchemas/properties/CpeCode'
            instructionComment:
              description: Comments pertaining to overall instructions
              type: string
            externalComment:
              description: Free form text to accommodate transaction comments and/or activities outside the TIP flow
              type: string
            instructionType:
              description: Instruction Type associated to the instructions that applies to how the AD ID should be applied to units
              type: string
              enum:
                - Rotation Share
                - Pattern
                - Unit Specific
            instructionDetails:
              type: array
              items:
                $ref: '#/components/schemas/commercialInstructionSchemas/properties/InstructionDetail'
          required:
            - transactionHeader
            - referenceIds
            - advertiser
            - product
            - dateWindow
            - instructionType
        InstructionDetail:
          description: Commercial Instruction details for instruction type
          properties:
            actionType:
              description: Action for instruction detail
              type: string
              enum:
                - New
                - Revised
                - Cancelled
            inventoryTypes:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/InventoryType'
            mediaOutlet:
              $ref: '#/components/schemas/commonSchemas/properties/MediaOutlet'
            adId:
              description: A unique identifier for commercial copy
              type: string
            name:
              description: Creative title associated to AD-ID
              type: string
            brand:
              $ref: '#/components/schemas/commonSchemas/properties/Brand'
            product:
              $ref: '#/components/schemas/commonSchemas/properties/Product'
            length:
              description: Commercial length associated to AD-ID
              type: integer
            linkType:
              $ref: '#/components/schemas/commonSchemas/properties/LinkType'
            deliveryDate:
              description: Material Commercial delivery date
              type: string
              format: date
            deliveryService:
              description: Delivery service that will supply the the Ad-ID
              type: string
            timePeriods:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/TimePeriod'
            rotationShare:
              description: If instruction type equals "Rotation" - this will be the percentage assignment to be applied to each AD-ID; the total across all AD-ID's should equal to 100%
              type: integer
            patternInstruction:
              description: 'If instruction type equal "Pattern" -this will be the pattern assignments to be applied to each AD-ID; for example A,B,B,C represents how AD-ID A, B and C should be sequentially assigned to units'
              type: string
            unitSpecificInstruction:
              description: If instruction type equal "Unit Specific" = this will the list of unit id's that are valid for the AD-ID
              type: array
              items:
                type: string
            specialInstructions:
              description: Comments that pertain to the instruction details
              type: string
          required:
            - actionType
            - mediaOutlet
            - adId
            - length
            - deliveryService
    inventoryAvailsSchemas:
      type: object
      properties:
        InventoryAvailsBuyerObject:
          description: Allows the Buyer as campaign planning to initiate an inventory Request to the Seller
          properties:
            transactionHeader:
              $ref: '#/components/schemas/commonSchemas/properties/TransactionHeader'
            dateSubmitted:
              description: Buyer Submit Date for Inventory Request
              type: string
              format: date
            dueDate:
              description: Due Date for seller to respond with Inventory Information
              type: string
              format: date
            mediaOutlets:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/MediaOutlet'
              minItems: 1
            buyer:
              $ref: '#/components/schemas/commonSchemas/properties/Buyer'
            advertiser:
              $ref: '#/components/schemas/commonSchemas/properties/Advertiser'
            contacts:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/Contact'
            timePeriods:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/TimePeriod'
              minItems: 1
            guidelines:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/Guideline'
            political:
              description: Indicates if the request is for political pricing
              type: boolean
            inventoryTypes:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/InventoryType'
            maxRate:
              description: Max rate spend across all inventory types
              type: number
              format: float
              minimum: 0
              exclusiveMinimum: true
            currency:
              $ref: '#/components/schemas/commonSchemas/properties/Currency'
            externalComment:
              description: Free form text to accommodate transaction comments and/or activities outside the TIP flow
              type: string
            audienceSegments:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/AudienceSegment'
              minItems: 1
            pricingMetricOptions:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/PricingMetricOption'
          required:
            - transactionHeader
            - dateSubmitted
            - mediaOutlets
            - timePeriods
            - political
            - audienceSegments
        InventoryAvailsSellerObject:
          description: 'Allows the Seller to post to the buyer their catalog of selling products, pricing and audience information'
          properties:
            transactionHeader:
              $ref: '#/components/schemas/commonSchemas/properties/TransactionHeader'
            dateSubmitted:
              description: Submission date for the inventory
              type: string
              format: date
            buyer:
              $ref: '#/components/schemas/commonSchemas/properties/Buyer'
            advertiser:
              $ref: '#/components/schemas/commonSchemas/properties/Advertiser'
            contacts:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/Contact'
            rateCard:
              $ref: '#/components/schemas/commonSchemas/properties/RateCard'
            currency:
              $ref: '#/components/schemas/commonSchemas/properties/Currency'
            political:
              description: Indicates that pricing being supplied are for political
              type: boolean
            mediaOutlets:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/MediaOutlet'
              minItems: 1
            audienceSegments:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/AudienceSegmentDetail'
            availWindow:
              $ref: '#/components/schemas/commonSchemas/properties/DateWindow'
            salesElements:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/SalesElement'
              minItems: 1
          required:
            - transactionHeader
            - dateSubmitted
            - political
            - mediaOutlets
            - availWindow
            - salesElements
    invoiceSchemas:
      type: object
      properties:
        InvoiceObject:
          description: Top level element for Invoice Seller POST operations
          properties:
            transactionHeader:
              $ref: '#/components/schemas/commonSchemas/properties/TransactionHeader'
            referenceIds:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/ReferenceId'
            invoiceDate:
              description: Date in which the original invoice was generated
              type: string
              format: date
            invoiceRevisionDate:
              description: Required for Invoice Revision – Date in which the invoice revision was generated
              type: string
              format: date
            billingOption:
              $ref: '#/components/schemas/commonSchemas/properties/BillingOption'
            dueDate:
              description: Date in which payment is due on invoice
              type: string
              format: date
            dateWindow:
              $ref: '#/components/schemas/commonSchemas/properties/DateWindow'
            businessType:
              description: Seller-defined type of business
              type: string
            buyer:
              $ref: '#/components/schemas/commonSchemas/properties/Buyer'
            localNational:
              description: Local or National marketplace
              type: string
              enum:
                - Local
                - National
            advertiser:
              $ref: '#/components/schemas/commonSchemas/properties/Advertiser'
            contacts:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/Contact'
            buylineCashTrade:
              description: Revenue Type associated to the invoice
              type: string
              enum:
                - Cash
                - Barter
                - Trade
            grossAmount:
              description: Totals gross amount for the invoice
              type: number
              format: float
            commission:
              description: Invoice total commission amount
              type: number
              format: float
            salesTax:
              description: Total sales tax applied to any elements on the invoice depending on state of invoice origin
              type: number
              format: float
            netAmount:
              description: Total net amount for all units within the invoice start and end date (gross amount– commission amount + sales tax)
              type: number
              format: float
            currency:
              $ref: '#/components/schemas/commonSchemas/properties/Currency'
            remittanceInfo:
              $ref: '#/components/schemas/commonSchemas/properties/RemittanceInfo'
            externalComment:
              description: Free form text for comments
              type: string
            lineDetails:
              type: array
              items:
                $ref: '#/components/schemas/invoiceSchemas/properties/LineDetail'
          required:
            - transactionHeader
            - referenceIds
            - invoiceDate
            - dateWindow
            - buyer
            - advertiser
            - buylineCashTrade
            - grossAmount
            - commission
            - netAmount
            - remittanceInfo
            - lineDetails
        LineDetail:
          description: Line Detail Information
          properties:
            buyLineIdReference:
              description: Seller's Line information
              type: string
            buyLineIdName:
              description: Buyer's line information associated to seller's line
              type: string
            unitType:
              description: The type of units on the line
              type: string
              enum:
                - Units
                - Impressions
                - Non Airtime
            brand:
              $ref: '#/components/schemas/commonSchemas/properties/Brand'
            product:
              $ref: '#/components/schemas/commonSchemas/properties/Product'
            salesElement:
              $ref: '#/components/schemas/commonSchemas/properties/SalesElementHeader'
            timePeriod:
              $ref: '#/components/schemas/commonSchemas/properties/TimePeriod'
            length:
              description: Length of commercial unit
              type: integer
            cpeCode:
              $ref: '#/components/schemas/commonSchemas/properties/CpeCode'
            billableRevenue:
              description: Indicates if the line's rate is based on booked rates or actuals (earned) rates
              type: string
              enum:
                - Booked
                - Actuals
            rate:
              type: number
              format: float
            inventoryType:
              $ref: '#/components/schemas/commonSchemas/properties/InventoryType'
            audiencePricingMetric:
              $ref: '#/components/schemas/commonSchemas/properties/AudiencePricingMetric'
            totalUnits:
              description: Total number of raw (equivalized) units (based on line's unit type) within the line's start and end date or if audience buy the total number of Raw Impressions
              type: integer
            unitDetails:
              type: array
              items:
                $ref: '#/components/schemas/invoiceSchemas/properties/UnitDetail'
          required:
            - buyLineIdReference
            - unitType
            - product
            - salesElement
            - length
        UnitDetail:
          description: Unit details information (required for "unit" type only)
          properties:
            unitId:
              description: Seller generated unique number - Required when unit type is equal to units
              type: string
            adId:
              description: Ad-ID
              type: string
            dateTime:
              $ref: '#/components/schemas/commonSchemas/properties/DateTime'
            podPosition:
              $ref: '#/components/schemas/commonSchemas/properties/InventoryPosition'
            linkType:
              $ref: '#/components/schemas/commonSchemas/properties/LinkType'
            preempt:
              description: Y/N indicator
              type: boolean
            makegood:
              description: Y/N indicator
              type: boolean
            adu:
              description: Y/N indicator
              type: boolean
            bonus:
              description: Y/N indicator
              type: boolean
            rate:
              description: Contracted rate associated to the unit
              type: number
              format: float
            credit:
              description: Y/N indicator
              type: boolean
            adjustmentReason:
              description: 'Only valid on invoice revisions – reason for change of unit (e.g. rate adjustment, incorrect copy, etc.)'
              type: string
            comment:
              description: Overall comment for the unit
              type: string
            childUnits:
              type: array
              items:
                $ref: '#/components/schemas/invoiceSchemas/properties/ChildUnitDetail'
          required:
            - unitId
        ChildUnitDetail:
          description: 'Child unit details for parent unit to support Mirror, Audience Network, Diginet or other forms of "child" units'
          properties:
            unitId:
              description: Unique identifier for "child" unit
              type: string
            mediaOutlet:
              $ref: '#/components/schemas/commonSchemas/properties/MediaOutlet'
            rate:
              description: Unit rate associated to the "child" unit
              type: number
              format: float
            adId:
              description: Ad-ID assigned to "child" unit
              type: string
            preempt:
              type: boolean
            makegood:
              type: boolean
            adu:
              type: boolean
            credit:
              type: boolean
            adjustmentReason:
              description: 'Only valid on invoice revisions – details reasons for change to the unit (e.g. rate adjustment, incorrect copy, etc.)'
              type: string
            dateTime:
              $ref: '#/components/schemas/commonSchemas/properties/DateTime'
    logTimesSchemas:
      type: object
      properties:
        LogTimesSellerObject:
          description: Top level element for Logtimes Seller POST operations
          properties:
            transactionHeader:
              $ref: '#/components/schemas/commonSchemas/properties/TransactionHeader'
            externalComment:
              description: A string that indicates additional information the seller can send to the buyer
              type: string
            units:
              type: array
              items:
                $ref: '#/components/schemas/logTimesSchemas/properties/Unit'
          required:
            - transactionHeader
            - units
        Unit:
          description: Unit detail information
          properties:
            unitId:
              description: Seller generated unique number for unit (ID will likely change if unit is moved to another week during recon process).
              type: string
            referenceIds:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/ReferenceId'
            cpeCode:
              $ref: '#/components/schemas/commonSchemas/properties/CpeCode'
            buyer:
              $ref: '#/components/schemas/commonSchemas/properties/Buyer'
            advertiser:
              $ref: '#/components/schemas/commonSchemas/properties/Advertiser'
            brand:
              $ref: '#/components/schemas/commonSchemas/properties/Brand'
            product:
              $ref: '#/components/schemas/commonSchemas/properties/Product'
            salesElement:
              $ref: '#/components/schemas/commonSchemas/properties/SalesElementHeader'
            program:
              description: The "as-aired" program name
              type: string
            daypart:
              description: The "as-aired" seller's daypart name
              type: string
            inventoryType:
              $ref: '#/components/schemas/commonSchemas/properties/InventoryType'
            linkType:
              $ref: '#/components/schemas/commonSchemas/properties/LinkType'
            makegood:
              description: Indicates if the unit is a makegood
              type: boolean
            adu:
              description: Indicates if the unit is a ADU
              type: boolean
            preemptUnitIds:
              description: Desired if unit's Makegood indicator is "Y"; "original" preempted unit(s) being resolved by makegood; there may be one too many preempt unit ids being resolved
              type: array
              items:
                type: string
            bonus:
              description: Indicates if the unit is a no-charge bonus
              type: boolean
            length:
              description: The duration of the unit in seconds
              type: integer
            rate:
              description: Unit Rate
              type: number
              format: float
            adId:
              description: Advertising industry standard unique identifier for the commercial. Can be an official AD-ID or any other ID.
              type: string
            status:
              description: Indicates the airing status of the unit
              type: string
              enum:
                - Aired
                - Scheduled
                - No Run
                - Finalized
                - Invoiced
            creditInd:
              description: Indicate if the unit was issued a credit
              type: boolean
            timePeriod:
              $ref: '#/components/schemas/commonSchemas/properties/TimePeriod'
            dateTime:
              $ref: '#/components/schemas/commonSchemas/properties/DateTime'
            childUnits:
              type: array
              items:
                $ref: '#/components/schemas/logTimesSchemas/properties/ChildUnit'
          required:
            - unitId
            - referenceIds
            - advertiser
            - product
            - salesElement
            - length
            - status
        ChildUnit:
          description: 'Child unit details for footprint unit to support Audience Network, Diginet or other forms of "child" units'
          properties:
            unitId:
              description: Unique identifier for "child" unit; Required if unit was sold as a cluster of units
              type: string
            mediaOutlet:
              $ref: '#/components/schemas/commonSchemas/properties/MediaOutlet'
            rate:
              description: Unit rate associated to the "child" unit
              type: number
              format: float
            adId:
              description: Advertising industry standard unique identifier for the commercial ; Required if child unit status is "Aired"
              type: string
            status:
              description: Indicates the airing status of the "child" unit
              type: string
              enum:
                - Aired
                - Scheduled
                - No Run
            reason:
              description: Reason description for No-Run status
              type: string
            dateTime:
              $ref: '#/components/schemas/commonSchemas/properties/DateTime'
        LogTimesResponse:
          properties:
            transactionId:
              type: string
            transactionDate:
              type: string
              format: date
    ordersSchemas:
      type: object
      properties:
        BuyerOrderRequestObject:
          description: 'Allows the buyer to send the detailed order information for a given order; execution is a summary of the sales elements details, thus allowing the seller to automatically create lines based on individual system''s rules. Buyer must submit entire order for Order Change Request using the last confirmed booked order version response. Seller will be responsible for deciphering change request from buyer. Cancellation of order either prior to start or mid flight will be submitted in an order change request'
          properties:
            transactionHeader:
              $ref: '#/components/schemas/commonSchemas/properties/TransactionHeader'
            referenceIds:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/ReferenceId'
            orderBookedDate:
              description: Date in which the buyer
              type: string
              format: date
            buyer:
              $ref: '#/components/schemas/commonSchemas/properties/Buyer'
            commission:
              description: Buyer commission percentage
              type: number
              format: float
            advertiser:
              $ref: '#/components/schemas/commonSchemas/properties/Advertiser'
            brand:
              $ref: '#/components/schemas/commonSchemas/properties/Brand'
            product:
              $ref: '#/components/schemas/commonSchemas/properties/Product'
            cpeCode:
              $ref: '#/components/schemas/commonSchemas/properties/CpeCode'
            budget:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/Budget'
            contacts:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/Contact'
            revenueType:
              description: How the proposal is being negotiated for payment terms
              type: string
              enum:
                - Cash
                - Barter
                - Trade
            businessType:
              description: Seller defined type of business
              type: string
            localNational:
              description: Market Type for Proposal
              type: string
              enum:
                - Local
                - National
            dealYear:
              description: The broadcast year in which the proposal is being negotiated for
              type: integer
            calendarType:
              description: The calendar in which the order was negotiated
              type: string
              enum:
                - Broadcast
                - Calendar
                - Nielsen
            billingOption:
              $ref: '#/components/schemas/commonSchemas/properties/BillingOption'
            equivalized:
              description: Indicates if the audience values are equivalized to the unit's length
              type: boolean
            dateWindow:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/DateWindow'
            cancellationTerms:
              $ref: '#/components/schemas/commonSchemas/properties/CancellationTerms'
            timeSeparations:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/TimeSeparation'
            termsOfSales:
              description: Contract terms
              type: string
            externalComment:
              description: Free form text to accommodate transaction comments and/or activities outside the TIP flow
              type: string
            rateCard:
              $ref: '#/components/schemas/commonSchemas/properties/RateCard'
            currency:
              $ref: '#/components/schemas/commonSchemas/properties/Currency'
            mediaOutlets:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/MediaOutlet'
            audienceSegments:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/AudienceSegmentDetail'
            salesElements:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/SalesElementTransaction'
          required:
            - transactionHeader
            - referenceIds
            - orderBookedDate
            - buyer
            - commission
            - contacts
            - revenueType
            - businessType
            - calendarType
            - equivalized
            - dateWindow
            - mediaOutlets
        OrderConfirmationResponseObject:
          description: Allows the seller to respond to an order or order change request with a confirmed booked confirmation
          properties:
            transactionHeader:
              $ref: '#/components/schemas/commonSchemas/properties/TransactionHeader'
            referenceIds:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/ReferenceId'
            confirmedBookedDate:
              description: Date that the Order was Confirmed Booked
              type: string
              format: date
            comments:
              description: Free form comments with "Not Accepted" Reason
              type: string
          required:
            - transactionHeader
            - referenceIds
            - confirmedBookedDate
        OrderRecallObject:
          description: 'Allows the buyer to recall a new order or order change request ; seller must respond back with acceptance or failure of the recall request. Note: Seller''s system defined the rules for acceptance or failure of request'
          properties:
            transactionHeader:
              $ref: '#/components/schemas/commonSchemas/properties/TransactionHeader'
            referenceIds:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/ReferenceId'
            recallDate:
              description: Buyer requesting to recall a previously submitted new or changed order. Seller responding back to Buyer acceptance or failure of request.
              type: string
              format: date
            comments:
              description: Free form comments
              type: string
          required:
            - transactionHeader
            - referenceIds
            - recallDate
        OrderRejectResponseObject:
          description: Allows the seller to reject a new order or order change request; seller must respond back with rejection comments
          properties:
            transactionHeader:
              $ref: '#/components/schemas/commonSchemas/properties/TransactionHeader'
            referenceIds:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/ReferenceId'
            rejectionDate:
              description: Date the order was rejected
              type: string
              format: date
            comments:
              description: Free form comments
              type: string
          required:
            - transactionHeader
            - referenceIds
            - rejectionDate
    proposalSchemas:
      type: object
      properties:
        ProposalObject:
          description: 'Allows the seller to respond back to the buyer with the detailed proposal for a given RFP or revised proposal; Multiple versions of a proposal can be under negotiation for the same campaign, but only one version may be executed; buyer must submit a "Proposal Change Request" for the last proposal version submission; seller must respond back with a Proposal Response that contains a new version number when submitting new versions. New Proposals may be submitted without a RFP Response'
          properties:
            transactionHeader:
              $ref: '#/components/schemas/commonSchemas/properties/TransactionHeader'
            referenceIds:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/ReferenceId'
              minItems: 1
            expirationDate:
              description: Date in which the proposal’s pricing and audience estimates expire
              type: string
              format: date
            buyer:
              $ref: '#/components/schemas/commonSchemas/properties/Buyer'
            commission:
              description: Buyer commission percentage
              type: number
              format: float
            advertiser:
              $ref: '#/components/schemas/commonSchemas/properties/Advertiser'
            brand:
              $ref: '#/components/schemas/commonSchemas/properties/Brand'
            product:
              $ref: '#/components/schemas/commonSchemas/properties/Product'
            budget:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/Budget'
            cpeCode:
              $ref: '#/components/schemas/commonSchemas/properties/CpeCode'
            contacts:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/Contact'
            revenueType:
              description: How the proposal is being negotiated for payment terms
              type: string
              enum:
                - Cash
                - Barter
                - Trade
            businessType:
              description: Seller defined type of business
              type: string
            localNational:
              description: Market Type for Proposal
              type: string
              enum:
                - Local
                - National
            dealYear:
              description: The broadcast year in which the proposal is being negotiated for
              type: integer
            billingOption:
              $ref: '#/components/schemas/commonSchemas/properties/BillingOption'
            equivalized:
              description: Indicates if the impressions weighted down or up from 30-second impressions based on their ratio of their length to 30 seconds.
              type: boolean
            dateWindow:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/DateWindow'
              minItems: 1
            cancellationTerms:
              $ref: '#/components/schemas/commonSchemas/properties/CancellationTerms'
            timeSeparations:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/TimeSeparation'
            termsOfSales:
              description: 'The information specific to payment terms, preemption status, etc.'
              type: string
            externalComment:
              description: Free form text to accommodate transaction comments and/or activities outside the TIP flow
              type: string
            rateCard:
              $ref: '#/components/schemas/commonSchemas/properties/RateCard'
            currency:
              $ref: '#/components/schemas/commonSchemas/properties/Currency'
            mediaOutlets:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/MediaOutlet'
              minItems: 1
            audienceSegments:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/AudienceSegmentDetail'
            salesElements:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/SalesElementTransaction'
          required:
            - transactionHeader
            - referenceIds
            - buyer
            - commission
            - contacts
            - revenueType
            - businessType
            - equivalized
            - dateWindow
            - mediaOutlets
    rfpsSchemas:
      type: object
      properties:
        RFPRequestObject:
          description: 'Allows the buyer to submit a Request for Proposal (RFP) to the seller with media budget, goals and overall terms'
          properties:
            transactionHeader:
              $ref: '#/components/schemas/commonSchemas/properties/TransactionHeader'
            referenceIds:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/ReferenceId'
            dateSubmitted:
              description: Buyer Submit Date for the RFP
              type: string
              format: date
            dueDate:
              description: Due Date for the response
              type: string
              format: date
            buyer:
              $ref: '#/components/schemas/commonSchemas/properties/Buyer'
            commission:
              description: Buyer Commission percentage amount
              type: number
              format: float
            advertiser:
              $ref: '#/components/schemas/commonSchemas/properties/Advertiser'
            brand:
              $ref: '#/components/schemas/commonSchemas/properties/Brand'
            product:
              $ref: '#/components/schemas/commonSchemas/properties/Product'
            contacts:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/Contact'
            currency:
              $ref: '#/components/schemas/commonSchemas/properties/Currency'
            budget:
              description: Overall total budget for the RFP
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/Budget'
            timePeriodPreferences:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/TimePeriod'
              minItems: 1
            marketPreferences:
              description: |-
                List of market preferences (AND)
                "<Market Name>"
              type: array
              items:
                type: string
            audiencePreferences:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/AudienceSegment'
            unitLengthPreferences:
              description: |-
                List of unit length preferences (AND)
                "<Unit Length>"
              type: array
              items:
                type: integer
            guidelines:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/Guideline'
            objective:
              description: KPI of the overall campaign
              type: string
            comments:
              description: Additional Information
              type: string
            campaignGoals:
              type: array
              items:
                $ref: '#/components/schemas/rfpsSchemas/properties/CampaignGoal'
          required:
            - transactionHeader
            - referenceIds
            - dateSubmitted
            - advertiser
            - contacts
            - timePeriodPreferences
        CampaignGoal:
          properties:
            distributionType:
              description: Goal Type Element used for distribution
              type: string
              enum:
                - MediaType
                - Daypart
                - Market
                - Quarter
                - Month
                - Week
                - AddedValue
            distributionMethod:
              description: Distribution Method Elements - Audience distributions pertain to the primary demo audience
              type: string
              enum:
                - Impressions
                - GRPs
                - Units
                - Budget
            distributionName:
              description: 'This is the name for the distribution type; for example it could be Daypart Name, or Quarter Name, etc.'
              type: string
            distribution:
              description: This defines how the distributions for the method are being defined
              type: string
              enum:
                - Percentage
                - Exact Value
            distributionValue:
              description: This is the value for the distribution goal; it could be exact numeric value or a a percentage amount
              type: number
              format: float
            distributionOrder:
              description: Only populate when multiple distributions types are defined; defines the nesting order for the distributions
              type: integer
              minimum: 0
            distributionOrderParent:
              description: Only populate when multiple distributions types are defined; defines the parent when there are multiple nesting orders
              type: integer
              nullable: true
          required:
            - distributionType
            - distributionMethod
            - distributionName
            - distribution
            - distributionValue
            - distributionOrder
    shoppingCartSchemas:
      type: object
      properties:
        shoppingCartRequestObject:
          type: object
          properties:
            transactionHeader:
              $ref: '#/components/schemas/commonSchemas/properties/TransactionHeader'
            referenceIds:
              description: Information pertaining to all the ids and their sources that are associated to the RFP;  RFP ID is required
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/ReferenceId'
            dateSubmitted:
              description: Buyer submit date for the RFP
              type: string
              format: date
            dueDate:
              description: Due date for the response
              type: string
              format: date
            buyer:
              $ref: '#/components/schemas/commonSchemas/properties/Buyer'
            advertiser:
              $ref: '#/components/schemas/commonSchemas/properties/Advertiser'
            brand:
              $ref: '#/components/schemas/commonSchemas/properties/Brand'
            product:
              $ref: '#/components/schemas/commonSchemas/properties/Product'
            contact:
              $ref: '#/components/schemas/commonSchemas/properties/Contact'
            currency:
              $ref: '#/components/schemas/commonSchemas/properties/Currency'
            budget:
              description: Overall total budget for the RFP
              type: number
            comission:
              description: Buyer comission percentage amount
              type: number
            mediaOutlets:
              description: A collection of media outlets to include in the shopping cart
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/MediaOutlet'
            audienceSegments:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/AudienceSegmentDetail'
            shoppingCart:
              type: array
              items:
                $ref: '#/components/schemas/shoppingCartSchemas/properties/ShoppingCart'
          required:
            - transactionHeader
            - referenceIds
            - dateSubmitted
            - advertiser
            - contact
        ShoppingCart:
          description: Individual items for the shopping cart experience
          type: object
          properties:
            salesElements:
              type: array
              items:
                $ref: '#/components/schemas/commonSchemas/properties/SalesElementTransaction'